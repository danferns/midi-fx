import{S as O,i as v,s as B,e as k,k as S,B as y,a as h,b as D,C as p,y as C,D as q,n as I,d as M,G as A,c as w,f as N,m as j,t as _,g,h as P,l as F,H as G,I as L,J as E,F as H,j as J}from"./index.9537bdcf.js";import{c as U}from"./NodeUtil.de1e0169.js";import{N as z}from"./NodeUI.ffd646b1.js";function K(e){let s,n,o,r,c,t,a,l;return{c(){s=k("div"),n=k("input"),o=S(),r=k("span"),c=y("\xA0"),t=y(e[1]),h(n,"type","checkbox"),h(n,"name",e[1]),n.__value=e[1],n.value=n.__value,h(n,"class","svelte-oiktt8"),h(r,"class","svelte-oiktt8"),h(s,"class","svelte-oiktt8")},m(u,f){D(u,s,f),p(s,n),e[4](n),n.checked=e[0],p(s,o),p(s,r),p(r,c),p(r,t),a||(l=[C(n,"change",e[5]),C(r,"click",e[6])],a=!0)},p(u,[f]){f&2&&h(n,"name",u[1]),f&2&&(n.__value=u[1],n.value=n.__value),f&1&&(n.checked=u[0]),f&2&&q(t,u[1])},i:I,o:I,d(u){u&&M(s),e[4](null),a=!1,A(l)}}}function Q(e,s,n){let{group:o}=s,{name:r}=s,{checked:c=!1}=s,t;function a(i){n(0,c=i.indexOf(r)>=0)}function l(i){const m=o.indexOf(r);i?m<0&&(o.push(r),n(3,o)):m>=0&&(o.splice(m,1),n(3,o))}function u(i){w[i?"unshift":"push"](()=>{t=i,n(2,t)})}function f(){c=this.checked,n(0,c)}const d=()=>{t.click()};return e.$$set=i=>{"group"in i&&n(3,o=i.group),"name"in i&&n(1,r=i.name),"checked"in i&&n(0,c=i.checked)},e.$$.update=()=>{e.$$.dirty&8&&a(o),e.$$.dirty&1&&l(c)},[c,r,t,o,u,f,d]}class R extends O{constructor(s){super(),v(this,s,Q,K,B,{group:3,name:1,checked:0})}}function T(e,s,n){const o=e.slice();return o[6]=s[n],o}function x(e){let s,n,o;function r(t){e[4](t)}let c={name:e[6]};return e[0].passThrough!==void 0&&(c.group=e[0].passThrough),s=new R({props:c}),w.push(()=>J(s,"group",r)),{c(){N(s.$$.fragment)},m(t,a){j(s,t,a),o=!0},p(t,a){const l={};!n&&a&1&&(n=!0,l.group=t[0].passThrough,F(()=>n=!1)),s.$set(l)},i(t){o||(_(s.$$.fragment,t),o=!0)},o(t){g(s.$$.fragment,t),o=!1},d(t){P(s,t)}}}function V(e){let s,n,o=Object.keys(b),r=[];for(let t=0;t<o.length;t+=1)r[t]=x(T(e,o,t));const c=t=>g(r[t],1,1,()=>{r[t]=null});return{c(){for(let t=0;t<r.length;t+=1)r[t].c();s=G()},m(t,a){for(let l=0;l<r.length;l+=1)r[l].m(t,a);D(t,s,a),n=!0},p(t,a){if(a&1){o=Object.keys(b);let l;for(l=0;l<o.length;l+=1){const u=T(t,o,l);r[l]?(r[l].p(u,a),_(r[l],1)):(r[l]=x(u),r[l].c(),_(r[l],1),r[l].m(s.parentNode,s))}for(L(),l=o.length;l<r.length;l+=1)c(l);E()}},i(t){if(!n){for(let a=0;a<o.length;a+=1)_(r[a]);n=!0}},o(t){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)g(r[a]);n=!1},d(t){H(r,t),t&&M(s)}}}function W(e){let s,n;return s=new z({props:{$$slots:{default:[V]},$$scope:{ctx:e}}}),{c(){N(s.$$.fragment)},m(o,r){j(s,o,r),n=!0},p(o,[r]){const c={};r&513&&(c.$$scope={dirty:r,ctx:o}),s.$set(c)},i(o){n||(_(s.$$.fragment,o),n=!0)},o(o){g(s.$$.fragment,o),n=!1},d(o){P(s,o)}}}const ee="Only allows selected types of MIDI messages to pass through.",b={"Note On / Off":e=>e>=128&&e<=159,"Polyphonic Aftertouch":e=>e>=160&&e<=175,"Control / Mode Change":e=>e>=176&&e<=191,"Program Change":e=>e>=192&&e<=207,"Channel Aftertouch":e=>e>=208&&e<=223,"Pitch Bend Change":e=>e>=224&&e<=239,Transport:e=>!![242,243,250,251,252].includes(e)};function X(e,s,n){let{id:o}=s;const r={MIDI:(u,f,d)=>{for(const i of t.passThrough)if(b[i](u)){a("MIDI",u,f,d);return}}},c={MIDI:new Set};let{state:t={passThrough:[]}}=s;const a=U(o,c);function l(u){e.$$.not_equal(t.passThrough,u)&&(t.passThrough=u,n(0,t))}return e.$$set=u=>{"id"in u&&n(1,o=u.id),"state"in u&&n(0,t=u.state)},[t,o,r,c,l]}class te extends O{constructor(s){super(),v(this,s,X,W,B,{id:1,inputs:2,outputs:3,state:0})}get inputs(){return this.$$.ctx[2]}get outputs(){return this.$$.ctx[3]}}export{te as default,ee as doc,b as messageTypes};
