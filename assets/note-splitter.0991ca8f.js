import{S as l,i as p,s as m}from"./index.9537bdcf.js";import{c as h}from"./NodeUtil.de1e0169.js";const x=`Splits "note on" and "note off" events into separate outputs.
    Other MIDI messages do not pass through this node.`;function N(e,n,o){return e>=144&&e<160&&o!==0}function O(e,n,o){return e>=128&&e<144?!0:e>=144&&e<=159&&o===0}function d(e,n,o){let{id:s}=n;const c={MIDI:(t,i,r)=>{N(t,i,r)?f("Note On",t,i,r):O(t,i,r)&&f("Note Off",t,i,r)}},u={"Note On":new Set,"Note Off":new Set},f=h(s,u);return e.$$set=t=>{"id"in t&&o(0,s=t.id)},[s,c,u]}class I extends l{constructor(n){super(),p(this,n,d,null,m,{id:0,inputs:1,outputs:2})}get inputs(){return this.$$.ctx[1]}get outputs(){return this.$$.ctx[2]}}export{I as default,x as doc,O as isNoteOff,N as isNoteOn};
