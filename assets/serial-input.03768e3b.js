import{S as B,i as T,s as E,H as L,b as _,t as p,g as $,d as m,o as N,f as g,m as b,h as w,k as v,E as O,c as U,j,l as H,B as h,D as z}from"./index.9537bdcf.js";import{c as F}from"./NodeUtil.de1e0169.js";import{N as R}from"./NodeUI.ffd646b1.js";import{T as M}from"./Title.c6515a67.js";import{D as G}from"./DropDown.0f3ed1b2.js";function J(c){let e,n;return e=new R({props:{$$slots:{default:[V]},$$scope:{ctx:c}}}),{c(){g(e.$$.fragment)},m(t,o){b(e,t,o),n=!0},p(t,o){const s={};o&32768&&(s.$$scope={dirty:o,ctx:t}),e.$set(s)},i(t){n||(p(e.$$.fragment,t),n=!0)},o(t){$(e.$$.fragment,t),n=!1},d(t){w(e,t)}}}function K(c){let e,n,t,o;return e=new R({props:{$$slots:{default:[X]},$$scope:{ctx:c}}}),t=new R({props:{$$slots:{default:[Z]},$$scope:{ctx:c}}}),{c(){g(e.$$.fragment),n=v(),g(t.$$.fragment)},m(s,r){b(e,s,r),_(s,n,r),b(t,s,r),o=!0},p(s,r){const f={};r&32775&&(f.$$scope={dirty:r,ctx:s}),e.$set(f);const a={};r&32769&&(a.$$scope={dirty:r,ctx:s}),t.$set(a)},i(s){o||(p(e.$$.fragment,s),p(t.$$.fragment,s),o=!0)},o(s){$(e.$$.fragment,s),$(t.$$.fragment,s),o=!1},d(s){w(e,s),s&&m(n),w(t,s)}}}function Q(c){let e;return{c(){e=h("Serial API Unavailable")},m(n,t){_(n,e,t)},d(n){n&&m(e)}}}function V(c){let e,n;return e=new M({props:{$$slots:{default:[Q]},$$scope:{ctx:c}}}),{c(){g(e.$$.fragment)},m(t,o){b(e,t,o),n=!0},p(t,o){const s={};o&32768&&(s.$$scope={dirty:o,ctx:t}),e.$set(s)},i(t){n||(p(e.$$.fragment,t),n=!0)},o(t){$(e.$$.fragment,t),n=!1},d(t){w(e,t)}}}function W(c){let e,n=c[0].connected?"Disconnect":"Connect",t;return{c(){e=h("Click to "),t=h(n)},m(o,s){_(o,e,s),_(o,t,s)},p(o,s){s&1&&n!==(n=o[0].connected?"Disconnect":"Connect")&&z(t,n)},d(o){o&&m(e),o&&m(t)}}}function X(c){let e,n;return e=new O({props:{$$slots:{default:[W]},$$scope:{ctx:c}}}),e.$on("click",c[9]),{c(){g(e.$$.fragment)},m(t,o){b(e,t,o),n=!0},p(t,o){const s={};o&32769&&(s.$$scope={dirty:o,ctx:t}),e.$set(s)},i(t){n||(p(e.$$.fragment,t),n=!0)},o(t){$(e.$$.fragment,t),n=!1},d(t){w(e,t)}}}function Y(c){let e;return{c(){e=h("Baud Rate")},m(n,t){_(n,e,t)},d(n){n&&m(e)}}}function Z(c){let e,n,t,o,s;e=new M({props:{$$slots:{default:[Y]},$$scope:{ctx:c}}});function r(a){c[10](a)}let f={options:c[3]};return c[0].baudRate!==void 0&&(f.value=c[0].baudRate),t=new G({props:f}),U.push(()=>j(t,"value",r)),{c(){g(e.$$.fragment),n=v(),g(t.$$.fragment)},m(a,u){b(e,a,u),_(a,n,u),b(t,a,u),s=!0},p(a,u){const d={};u&32768&&(d.$$scope={dirty:u,ctx:a}),e.$set(d);const l={};!o&&u&1&&(o=!0,l.value=a[0].baudRate,H(()=>o=!1)),t.$set(l)},i(a){s||(p(e.$$.fragment,a),p(t.$$.fragment,a),s=!0)},o(a){$(e.$$.fragment,a),$(t.$$.fragment,a),s=!1},d(a){w(e,a),a&&m(n),w(t,a)}}}function x(c){let e,n,t,o;const s=[K,J],r=[];function f(a,u){return a[4]?0:1}return e=f(c),n=r[e]=s[e](c),{c(){n.c(),t=L()},m(a,u){r[e].m(a,u),_(a,t,u),o=!0},p(a,[u]){n.p(a,u)},i(a){o||(p(n),o=!0)},o(a){$(n),o=!1},d(a){r[e].d(a),a&&m(t)}}}const re=`
    Receives MIDI messages from a Serial input, and forwards them.
    This makes it possible to use microcontrollers (like Arduinos) as MIDI inputs.
    On the Arduino, simply use \`Serial.write()\` to send the MIDI message bytes.
    `;function ee(c,e,n){let{id:t}=e;const o={},s={MIDI:new Set};let{state:r={baudRate:"9600",connected:!1}}=e;const f=F(t,s),a=["9600","14400","19200","28800","38400","57600","115200"];let u="serial"in navigator,d,l;N(async()=>{if(u){const i=await navigator.serial.getPorts();if(i.length){const k=i[0];n(2,l=k),r.connected&&D()}}});async function S(){const i=await navigator.serial.requestPort();n(2,l=i),D()}async function D(){for(n(0,r.connected=!0,r),await l.open({baudRate:parseInt(r.baudRate)});l.readable&&r.connected;){n(1,d=l.readable.getReader());try{for(;;){const{value:i,done:k}=await d.read();if(k)break;P(i)}}catch(i){console.error(i)}finally{d.releaseLock()}}}let I=[];function P(i){for(I.push(...i);I.length>=3;){const[k,C,A]=I.splice(0,3);f("MIDI",k,C,A)}}const q=async()=>{r.connected?(n(0,r.connected=!1,r),d.cancel(),d.releaseLock(),await l.close()):S()};function y(i){c.$$.not_equal(r.baudRate,i)&&(r.baudRate=i,n(0,r))}return c.$$set=i=>{"id"in i&&n(6,t=i.id),"state"in i&&n(0,r=i.state)},[r,d,l,a,u,S,t,o,s,q,y]}class ce extends B{constructor(e){super(),T(this,e,ee,x,E,{id:6,inputs:7,outputs:8,state:0})}get inputs(){return this.$$.ctx[7]}get outputs(){return this.$$.ctx[8]}}export{ce as default,re as doc};
