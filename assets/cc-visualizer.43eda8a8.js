import{S as R,i as P,s as X,e as F,a as _,b as x,n as v,d as y,o as D,c as d,f as m,m as w,t as b,g as p,h as L,j as Y,k as C,l as S}from"./index.9537bdcf.js";import{N as E}from"./NodeUI.ffd646b1.js";import{c as T}from"./NodeUtil.de1e0169.js";import{N as I}from"./NumericInput.39abe510.js";import{w as U}from"./index.f5911502.js";class M{constructor(e,t,i,o){this.r=e,this.g=t,this.b=i,this.a=o}}class N{constructor(){this.scaleX=1,this.scaleY=1,this.offsetX=0,this.offsetY=0,this.loop=!1,this._vbuffer=0,this._coord=0,this.visible=!0,this.intensity=1,this.xy=new Float32Array([]),this.numPoints=0,this.color=new M(0,0,0,1),this.webglNumPoints=0}}class O extends N{constructor(e,t){super(),this.currentIndex=0,this.webglNumPoints=t,this.numPoints=t,this.color=e,this.xy=new Float32Array(2*this.webglNumPoints)}setX(e,t){this.xy[e*2]=t}setY(e,t){this.xy[e*2+1]=t}getX(e){return this.xy[e*2]}getY(e){return this.xy[e*2+1]}lineSpaceX(e,t){for(let i=0;i<this.numPoints;i++)this.setX(i,e+t*i)}arrangeX(){this.lineSpaceX(-1,2/this.numPoints)}constY(e){for(let t=0;t<this.numPoints;t++)this.setY(t,e)}shiftAdd(e){const t=e.length;for(let i=0;i<this.numPoints-t;i++)this.setY(i,this.getY(i+t));for(let i=0;i<t;i++)this.setY(i+this.numPoints-t,e[i])}addArrayY(e){if(this.currentIndex+e.length<=this.numPoints)for(let t=0;t<e.length;t++)this.setY(this.currentIndex,e[t]),this.currentIndex++}replaceArrayY(e){if(e.length==this.numPoints)for(let t=0;t<this.numPoints;t++)this.setY(t,e[t])}}class B{constructor(e,t){this.debug=!1,this.addLine=this.addDataLine,t==null?this.webgl=e.getContext("webgl",{antialias:!0,transparent:!1}):(this.webgl=e.getContext("webgl",{antialias:t.antialias,transparent:t.transparent,desynchronized:t.deSync,powerPerformance:t.powerPerformance,preserveDrawing:t.preserveDrawing}),this.debug=t.debug==null?!1:t.debug),this.log("canvas type is: "+e.constructor.name),this.log(`[webgl-plot]:width=${e.width}, height=${e.height}`),this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[],this.gScaleX=1,this.gScaleY=1,this.gXYratio=1,this.gOffsetX=0,this.gOffsetY=0,this.gLog10X=!1,this.gLog10Y=!1,this.webgl.clear(this.webgl.COLOR_BUFFER_BIT),this.webgl.viewport(0,0,e.width,e.height),this._progLine=this.webgl.createProgram(),this.initThinLineProgram(),this.webgl.enable(this.webgl.BLEND),this.webgl.blendFunc(this.webgl.SRC_ALPHA,this.webgl.ONE_MINUS_SRC_ALPHA)}get linesData(){return this._linesData}get linesAux(){return this._linesAux}get thickLines(){return this._thickLines}get surfaces(){return this._surfaces}_drawLines(e){const t=this.webgl;e.forEach(i=>{if(i.visible){t.useProgram(this._progLine);const o=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(o,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));const l=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(l,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));const n=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(n,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));const g=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(g,[i.color.r,i.color.g,i.color.b,i.color.a]),t.bufferData(t.ARRAY_BUFFER,i.xy,t.STREAM_DRAW),t.drawArrays(i.loop?t.LINE_LOOP:t.LINE_STRIP,0,i.webglNumPoints)}})}_drawSurfaces(e){const t=this.webgl;e.forEach(i=>{if(i.visible){t.useProgram(this._progLine);const o=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(o,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));const l=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(l,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));const n=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(n,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));const g=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(g,[i.color.r,i.color.g,i.color.b,i.color.a]),t.bufferData(t.ARRAY_BUFFER,i.xy,t.STREAM_DRAW),t.drawArrays(t.TRIANGLE_STRIP,0,i.webglNumPoints)}})}_drawTriangles(e){const t=this.webgl;t.bufferData(t.ARRAY_BUFFER,e.xy,t.STREAM_DRAW),t.useProgram(this._progLine);const i=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(i,!1,new Float32Array([e.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,e.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));const o=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(o,new Float32Array([e.offsetX+this.gOffsetX,e.offsetY+this.gOffsetY]));const l=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(l,new Int32Array([0,0]));const n=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(n,[e.color.r,e.color.g,e.color.b,e.color.a]),t.drawArrays(t.TRIANGLE_STRIP,0,e.xy.length/2)}_drawThickLines(){this._thickLines.forEach(e=>{if(e.visible){const t=Math.min(this.gScaleX,this.gScaleY);e.setActualThickness(e.getThickness()/t),e.convertToTriPoints(),this._drawTriangles(e)}})}update(){this.clear(),this.draw()}draw(){this._drawLines(this.linesData),this._drawLines(this.linesAux),this._drawThickLines(),this._drawSurfaces(this.surfaces)}clear(){this.webgl.clear(this.webgl.COLOR_BUFFER_BIT)}_addLine(e){e._vbuffer=this.webgl.createBuffer(),this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER,e._vbuffer),this.webgl.bufferData(this.webgl.ARRAY_BUFFER,e.xy,this.webgl.STREAM_DRAW),e._coord=this.webgl.getAttribLocation(this._progLine,"coordinates"),this.webgl.vertexAttribPointer(e._coord,2,this.webgl.FLOAT,!1,0,0),this.webgl.enableVertexAttribArray(e._coord)}addDataLine(e){this._addLine(e),this.linesData.push(e)}addAuxLine(e){this._addLine(e),this.linesAux.push(e)}addThickLine(e){this._addLine(e),this._thickLines.push(e)}addSurface(e){this._addLine(e),this.surfaces.push(e)}initThinLineProgram(){const e=`
      attribute vec2 coordinates;
      uniform mat2 uscale;
      uniform vec2 uoffset;
      uniform ivec2 is_log;

      void main(void) {
         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;
         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;
         vec2 line = vec2(x, y);
         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);
      }`,t=this.webgl.createShader(this.webgl.VERTEX_SHADER);this.webgl.shaderSource(t,e),this.webgl.compileShader(t);const i=`
         precision mediump float;
         uniform highp vec4 uColor;
         void main(void) {
            gl_FragColor =  uColor;
         }`,o=this.webgl.createShader(this.webgl.FRAGMENT_SHADER);this.webgl.shaderSource(o,i),this.webgl.compileShader(o),this._progLine=this.webgl.createProgram(),this.webgl.attachShader(this._progLine,t),this.webgl.attachShader(this._progLine,o),this.webgl.linkProgram(this._progLine)}popDataLine(){this.linesData.pop()}removeAllLines(){this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[]}removeDataLines(){this._linesData=[]}removeAuxLines(){this._linesAux=[]}viewport(e,t,i,o){this.webgl.viewport(e,t,i,o)}log(e){this.debug&&console.log("[webgl-plot]:"+e)}}function V(r){let e;return{c(){e=F("canvas"),_(e,"height",r[0]),_(e,"width",r[1]),_(e,"class","svelte-12kzb1v")},m(t,i){x(t,e,i),r[4](e)},p(t,[i]){i&1&&_(e,"height",t[0]),i&2&&_(e,"width",t[1])},i:v,o:v,d(t){t&&y(e),r[4](null)}}}function W(r,e,t){let{height:i}=e,{width:o}=e,{lastValue:l}=e;const n=U("hsl(180, 50%, 50%)").toRgb();["r","g","b"].forEach(a=>n[a]/=255);let g,f,h;D(()=>{f=new B(g),h=new O(n,g.width),f.addLine(h),h.arrangeX(),h.scaleY=2/127,h.offsetY=-1,u()});function u(){s(),f.update(),requestAnimationFrame(u)}function s(){for(let a=0;a<h.numPoints-1;a++)h.setY(a,h.getY(a+1));h.setY(h.numPoints-1,l)}function c(a){d[a?"unshift":"push"](()=>{g=a,t(2,g)})}return r.$$set=a=>{"height"in a&&t(0,i=a.height),"width"in a&&t(1,o=a.width),"lastValue"in a&&t(3,l=a.lastValue)},[i,o,g,l,c]}class z extends R{constructor(e){super(),P(this,e,W,V,X,{height:0,width:1,lastValue:3})}}function G(r){let e,t,i,o,l,n;function g(s){r[5](s)}let f={};r[0].cc!==void 0&&(f.value=r[0].cc),e=new I({props:f}),d.push(()=>Y(e,"value",g));function h(s){r[6](s)}let u={height:200,width:400};return r[1]!==void 0&&(u.lastValue=r[1]),o=new z({props:u}),d.push(()=>Y(o,"lastValue",h)),{c(){m(e.$$.fragment),i=C(),m(o.$$.fragment)},m(s,c){w(e,s,c),x(s,i,c),w(o,s,c),n=!0},p(s,c){const a={};!t&&c&1&&(t=!0,a.value=s[0].cc,S(()=>t=!1)),e.$set(a);const A={};!l&&c&2&&(l=!0,A.lastValue=s[1],S(()=>l=!1)),o.$set(A)},i(s){n||(b(e.$$.fragment,s),b(o.$$.fragment,s),n=!0)},o(s){p(e.$$.fragment,s),p(o.$$.fragment,s),n=!1},d(s){L(e,s),s&&y(i),L(o,s)}}}function H(r){let e,t;return e=new E({props:{$$slots:{default:[G]},$$scope:{ctx:r}}}),{c(){m(e.$$.fragment)},m(i,o){w(e,i,o),t=!0},p(i,[o]){const l={};o&259&&(l.$$scope={dirty:o,ctx:i}),e.$set(l)},i(i){t||(b(e.$$.fragment,i),t=!0)},o(i){p(e.$$.fragment,i),t=!1},d(i){L(e,i)}}}const $=`
    Visualizes the value of a Control Change message.
    You can set the CC number you want to visualize, or leave it at \`-1\`
    and it will auto detect the number from the first CC message it receives.`;function k(r,e,t){let{id:i}=e;const o={MIDI:(s,c,a)=>{s>=176&&s<=191&&(n.cc==-1&&t(0,n.cc=c,n),c==n.cc&&t(1,f=a)),g("MIDI",s,c,a)}},l={MIDI:new Set};let{state:n={cc:-1}}=e;const g=T(i,l);let f=0;function h(s){r.$$.not_equal(n.cc,s)&&(n.cc=s,t(0,n))}function u(s){f=s,t(1,f)}return r.$$set=s=>{"id"in s&&t(2,i=s.id),"state"in s&&t(0,n=s.state)},[n,f,i,o,l,h,u]}class q extends R{constructor(e){super(),P(this,e,k,H,X,{id:2,inputs:3,outputs:4,state:0})}get inputs(){return this.$$.ctx[3]}get outputs(){return this.$$.ctx[4]}}export{q as default,$ as doc};
